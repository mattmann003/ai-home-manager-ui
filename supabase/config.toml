
# project_id is a unique identifier for your project in Supabase.
project_id = "sjxeupeggseedybibyzx"

[api]
# Port to use for the API URL (e.g. http://localhost:54321).
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. Public and storage are always included.
schemas = ["public", "storage", "graphql_public"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# Maximum rows returns in a single REST request.
max_rows = 1000

[db]
# Port to use for the local database URL (e.g. postgres://postgres:postgres@localhost:54322/postgres).
port = 54322
# Port used by a POSTgREST instance run by Supabase Studio to connect to the database.
studio_port = 54323
# The database major version to use. This has to be the same as your remote database's. Run `SHOW
# server_version;` on the remote database to check.
major_version = 15

[studio]
# Port to use for Supabase Studio.
port = 54324
# External URL of the API server that frontend connects to.
api_url = "http://localhost"

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
# Port to use for the email testing server web interface.
port = 54325
# Uncomment to expose additional ports for testing user applications that send emails.
# smtp_port = 54326
# pop3_port = 54327

[storage]
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Requires enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project.
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Configure custom SMTP for auth emails.
[auth.email.smtp]
# Uncomment to use a custom SMTP server for auth emails.
# host = "smtp.example.com"
# Use a port that supports TLS (usually 465).
port = 465
# Uncomment if your SMTP server uses TLS.
# tls.enabled = true
# Uncomment if your SMTP server uses SSL.
# ssl.enabled = true

# Configure Auth Policies
[auth.policies.repositories]
# Check if the user has access to the repository
predicate = "EXISTS ( SELECT 1 FROM public.repositories r WHERE r.id = repositories.id AND r.owner_id = auth.uid() )"
actions = ["select", "insert", "update", "delete"]
database_role = "authenticated"

# Configure functions for the edge.
[functions]
[functions.vapi-handler]
verify_jwt = true

[functions.twilio-handler]
verify_jwt = true

[analytics]
enabled = false
